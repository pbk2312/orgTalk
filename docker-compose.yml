version: '3.8'

services:
  redis:
    image: redis:7.0
    container_name: orgtalk-redis
    restart: always
    volumes:
      - redis-data:/data
    command: [ "redis-server", "--appendonly", "yes" ]
    networks:
      - orgtalk-net
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:latest
    container_name: orgtalk-mongodb
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
    volumes:
      - mongo-data:/data/db
    networks:
      - orgtalk-net
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: orgtalk-rabbitmq
    restart: always
    ports:
      - "5672:5672"     # AMQP port
      - "15672:15672"   # Management UI
      - "61613:61613"   # STOMP port
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - orgtalk-net
    command: >
      bash -c "
        rabbitmq-plugins enable rabbitmq_management rabbitmq_stomp rabbitmq_web_stomp;
        rabbitmq-server
      "
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5

  main-server:
    image: ${DOCKER_USERNAME}/main-server:latest
    container_name: orgtalk-main-server
    restart: always
    ports:
      - "8080:8080"
    networks:
      - orgtalk-net
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - DB_URL=${DB_URL}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OAUTH_GITHUB_CLIENT_ID=${OAUTH_GITHUB_CLIENT_ID}
      - OAUTH_GITHUB_CLIENT_SECRET=${OAUTH_GITHUB_CLIENT_SECRET}
      - FRONTEND_REDIRECT_URI=${FRONTEND_REDIRECT_URI}
      - JWT_ORIGIN_KEY=${JWT_ORIGIN_KEY}
      - JWT_APP_KEY=${JWT_APP_KEY}
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    healthcheck:
      test: [ "CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

  chat-server:
    image: ${DOCKER_USERNAME}/chat-server:latest
    container_name: orgtalk-chat-server
    restart: always
    ports:
      - "8081:8081"
    networks:
      - orgtalk-net
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - DB_URL=${DB_URL}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DATABASE=${MONGODB_DATABASE}
      - MONGODB_USERNAME=${MONGODB_USERNAME}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - REDIS_HOST=redis  # orgtalk-redis가 아닌 redis
      - REDIS_PORT=6379
      - JWT_ORIGIN_KEY=${JWT_ORIGIN_KEY}
      - JWT_APP_KEY=${JWT_APP_KEY}
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672

  frontend:
    image: ${DOCKER_USERNAME}/frontend:latest
    container_name: orgtalk-frontend
    restart: always
    ports:
      - "80:80"
      - "443:443"
    networks:
      - orgtalk-net
    depends_on:
      main-server:
        condition: service_healthy
      chat-server:
        condition: service_started
    environment:
      - REACT_APP_MAIN_SERVER_URL=/api
      - REACT_APP_CHAT_SERVER_URL=/api/chat
      - FRONTEND_REDIRECT_URI=${FRONTEND_REDIRECT_URI}
    healthcheck:
      test: [ "CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis-data:
    driver: local
  mongo-data:
    driver: local
  rabbitmq-data:
    driver: local

networks:
  orgtalk-net:
    driver: bridge
